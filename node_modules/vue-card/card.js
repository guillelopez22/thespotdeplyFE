var trim;

trim = function(str) {
  return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
};

module.exports = {
  mixins: [require("vue-mixins/isOpened"), require("vue-mixins/class"), require("vue-mixins/style"), require("vue-mixins/transition")],
  props: {
    "class": {
      "default": function() {
        return [];
      }
    },
    style: {
      "default": function() {
        return [];
      }
    },
    revealStyle: {
      "default": "",
      coerce: function(val) {
        var i, kv, len, obj, opt, ref;
        if (typeof val === 'string' || val instanceof String) {
          obj = {};
          ref = val.split(";");
          for (i = 0, len = ref.length; i < len; i++) {
            opt = ref[i];
            kv = opt.split(":");
            if (kv.length === 2) {
              obj[trim(kv[0])] = trim(kv[1]);
            }
          }
          return obj;
        }
        return obj;
      }
    },
    zIndex: {
      type: Number,
      "default": 50
    },
    transition: {
      type: String,
      "default": "card"
    }
  },
  computed: {
    pointer: function() {
      if (this.hasReveal) {
        return {
          cursor: "pointer"
        };
      }
      return {};
    },
    mergeStyle: function() {
      return {
        position: 'relative',
        overflow: 'hidden'
      };
    },
    mergeClass: function() {
      return ["card"];
    },
    mergeRStyle: function() {
      return [
        {
          height: this.$el.clientHeight + "px",
          zIndex: this.zindex
        }, this.revealStyle, this.rStyle
      ];
    },
    hasImage: function() {
      return this._slotContents.img != null;
    },
    hasReveal: function() {
      return this._slotContents.revealTitle != null;
    },
    hasAction: function() {
      return this._slotContents.action != null;
    }
  },
  data: function() {
    return {
      rStyle: {
        top: 0
      }
    };
  },
  methods: {
    toggle: function(e) {
      if (!this.hasReveal) {
        return;
      }
      if (e != null) {
        if (e.defaultPrevented) {
          return;
        }
        if (typeof e.preventDefault === "function") {
          e.preventDefault();
        }
      }
      if (this.opened) {
        return this.setClosed();
      } else {
        return this.setOpened();
      }
    }
  }
};

if (module.exports.__esModule) module.exports = module.exports.default
;(typeof module.exports === "function"? module.exports.options: module.exports).template = "<div :class=computedClass :style=computedStyle><div class=card-image v-if=hasImage @click=toggle :style=pointer><slot name=img></slot></div><div class=card-content><span class=card-title @click=toggle :style=pointer><slot name=title></slot></span><slot></slot></div><div class=card-reveal v-if=\"hasReveal &amp;&amp; opened\" :transition=cTransition style=display:block;width:100%;height:100%;position:absolute :style=mergeRStyle><span class=card-title @click=toggle :style=pointer><slot name=revealTitle></slot></span><slot name=reveal></slot></div><div class=card-action v-if=hasAction><slot name=action></slot></div></div>"
