(function() {
  var Toaster, Velocity;

  Velocity = require("velocity-animate");

  Toaster = require("vue-toaster/toaster");

  Toaster.obj.props.isTop["default"] = true;

  Toaster.obj.components.toast = require("./toast");

  Toaster.obj.transitions = {
    toast: {
      css: false,
      enter: function(el, done) {
        return Velocity(el, {
          top: 0,
          opacity: 1
        }, {
          duration: 300,
          queue: false,
          easing: 'easeOutCubic',
          complete: done
        });
      },
      leave: function(el, done) {
        return Velocity(el, {
          opacity: 0,
          marginTop: '-40px'
        }, {
          duration: 375,
          queue: false,
          easing: 'easeOutExpo',
          complete: done
        });
      }
    }
  };

  module.exports = {
    computed: require("vue-mixins/vue").computed,
    compiled: function() {
      var toaster;
      toaster = Toaster(this.Vue);
      if (toaster.used === 0) {
        document.body.appendChild(toaster.$el);
      }
      toaster.used++;
      return this.toast = toaster.toast;
    },
    beforeDestroy: function() {
      var toaster;
      toaster = Toaster(this.Vue);
      toaster.used--;
      if (toaster.used === 0) {
        toaster.clear();
        return document.body.removeChild(toaster.$el);
      }
    }
  };

}).call(this);
